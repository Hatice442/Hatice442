import cv2
import numpy as np

# Kamerayı başlat
kamera = cv2.VideoCapture(0)
if not kamera.isOpened():
    print("Kamera açılamadı!")
    exit()

# HSV renk aralıkları (kırmızı renk için)
lower_red = np.array([0, 120, 70])    # Kırmızı alt sınır
upper_red = np.array([10, 255, 255])  # Kırmızı üst sınır
lower_red2 = np.array([170, 120, 70]) # Kırmızı ikinci alt sınır
upper_red2 = np.array([180, 255, 255]) # Kırmızı ikinci üst sınır

while True:
    # Kameradan bir kare al
    ret, frame = kamera.read()
    if not ret:
        print("Görüntü alınamadı!")
        break

    # Görüntüyü HSV renk uzayına çevir
    hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)

    # Kırmızı renk için maske oluştur
    mask1 = cv2.inRange(hsv, lower_red, upper_red)
    mask2 = cv2.inRange(hsv, lower_red2, upper_red2)
    mask = mask1 | mask2  # Maskeleri birleştir

    # Gürültüyü azaltmak için morfolojik işlemler
    mask = cv2.erode(mask, None, iterations=2)
    mask = cv2.dilate(mask, None, iterations=2)

    # Maskeyi daha net hale getirmek için GaussianBlur
    mask = cv2.GaussianBlur(mask, (5, 5), 0)

    # Maske üzerinde konturlar bul
    contours, _ = cv2.findContours(mask, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

    if len(contours) > 0:
        for contour in contours:
            # Konturun etrafına bir dikdörtgen çiz
            (x, y, w, h) = cv2.boundingRect(contour)
            cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)

    # Kameradan alınan görüntüyü ve maskeyi göster
    cv2.imshow("Kamera Goruntusu", frame)
    cv2.imshow("Mask", mask)  # Maskeyi de göstermek faydalı olabilir

    # 'x' tuşuna basıldığında çık
    if cv2.waitKey(1) & 0xFF == ord('x'):
        break

# Kaynakları serbest bırak
kamera.release()
cv2.destroyAllWindows()
